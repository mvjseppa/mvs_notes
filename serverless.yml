# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: mvs-notes-api # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
    name: aws
    runtime: python3.6
    region: eu-central-1
    profile: serverless-admin
    environment:
        DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
        FINCH_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-finch

    iamRoleStatements:
        -
            Effect: Allow
            Action:
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
            Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        -
            Effect: "Allow"
            Action:
                - "s3:*"
            Resource: "*"

functions:
    create:
        handler: create.create
        events:
            - http:
                path: mvs-notes
                method: post
                cors: true
                authorizer:
                    arn: "${self:custom.auth}"

    get:
        handler: get.get
        events:
            -   http:
                    path: mvs-notes/{id}
                    method: get
                    cors: true
                    authorizer:
                        arn: "${self:custom.auth}"

    list:
        handler: get.list
        events:
            -   http:
                    path: mvs-notes
                    method: get
                    cors: true
                    authorizer:
                        arn: "${self:custom.auth}"


#    customMessage:
#        handler: customMessage.handler
#        events:
#            -   cognitoUserPool:
#                    pool: MyUserPool

resources:
    Resources:
        mvsNotesDynamodbTable:
            Type: 'AWS::DynamoDB::Table'
            DeletionPolicy: Retain
            Properties:
                AttributeDefinitions:
                    -
                        AttributeName: id
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: id
                        KeyType: HASH

                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1

                TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
    - serverless-finch

custom:
    auth: "arn:aws:cognito-idp:eu-central-1:412384590453:userpool/eu-central-1_op50LtdMn"
    client:
        bucketName: ${self:provider.environment.FINCH_BUCKET} # (see Configuration Parameters below)
        distributionFolder: "client/build"
        # [other configuration parameters] (see Configuration Parameters below)
